/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.13 hp_elitebook_laptop.gltf --transform 
Files: hp_elitebook_laptop.gltf [1.39MB] > hp_elitebook_laptop-transformed.glb [211.47KB] (85%)
Author: lazercar (https://sketchfab.com/lazercar)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/hp-elitebook-laptop-137a3e8ca97c40f9916e34d2b0c07a9a
Title: HP Elitebook Laptop
*/

import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import * as THREE from 'three';


 export default function Model(props) {
  const { nodes, materials } = useGLTF('/hp_elitebook_laptop-transformed.glb')//calling the glb file in textures

  //calling the textures from the texture folder....
  const newTexture = new THREE.TextureLoader().load('/textures/brushed_metal_specularGlossiness.png');
  const newTexture2 = new THREE.TextureLoader().load('/textures/brushed_metal_normal.png');
 
  const screenTexture = new THREE.TextureLoader().load('/textures/screen_diffuse.png');
  const screenTexture2 = new THREE.TextureLoader().load('/textures/screen_specularGlossiness.png');

  //making textures
  materials.brushed_metal.map= newTexture;
  materials.brushed_metal.map = newTexture2;
  materials.screen.map = screenTexture;
  materials.screen.map = screenTexture2;

  //calling colors
  materials.keys_color.color.set('white');
  materials.brushed_metal.color.set('grey');
  materials.everything_else.color.set('grey');
  materials.mate_black.color.set('grey');
  materials.contacts.color.set('grey')
  materials.finger_reader.color.set('white');
  materials.gloss.color.set('grey');//back of the screen
  return (
    <group {...props} dispose={null}>
      <mesh geometry={nodes.Cube_0.geometry} material={materials.brushed_metal} rotation={[-Math.PI / 2, 0, 0]} scale={[8.25, 5.65, 0.272]} />
      <mesh geometry={nodes.Cube_1.geometry} material={materials.everything_else} rotation={[-Math.PI / 2, 0, 0]} scale={[8.25, 5.65, 0.272]} />
      <mesh geometry={nodes.Cube_2.geometry} material={materials.mate_black} rotation={[-Math.PI / 2, 0, 0]} scale={[8.25, 5.65, 0.272]} />
      <mesh geometry={nodes.Cube_3.geometry} material={materials.contacts} rotation={[-Math.PI / 2, 0, 0]} scale={[8.25, 5.65, 0.272]} />
      <mesh geometry={nodes.Cube_4.geometry} material={materials.finger_reader} rotation={[-Math.PI / 2, 0, 0]} scale={[8.25, 5.65, 0.272]} />
      <mesh geometry={nodes.Cube001_0.geometry} material={materials.gloss} position={[0.032, 0.462, -5.461]} rotation={[-1.574, 0, 0]} scale={[8.137, 0.131, 1.008]} />
      <mesh geometry={nodes.Cube001_1.geometry} material={materials.nothing} position={[0.032, 0.462, -5.461]} rotation={[-1.574, 0, 0]} scale={[8.137, 0.131, 1.008]} />
      <mesh geometry={nodes.Cube001_2.geometry} material={materials.glow} position={[0.032, 0.462, -5.461]} rotation={[-1.574, 0, 0]} scale={[8.137, 0.131, 1.008]} />
      <mesh geometry={nodes.Cube001_4.geometry} material={materials.orange} position={[0.032, 0.462, -5.461]} rotation={[-1.574, 0, 0]} scale={[8.137, 0.131, 1.008]} />
      <mesh geometry={nodes.Cube001_5.geometry} material={materials.glass} position={[0.032, 0.462, -5.461]} rotation={[-1.574, 0, 0]} scale={[8.137, 0.131, 1.008]} />
      <mesh geometry={nodes.Cube001_6.geometry} material={materials.screen} position={[0.032, 0.462, -5.461]} rotation={[-1.574, 0, 0]} scale={[8.137, 0.131, 1.008]} />
      <mesh geometry={nodes.Cube003_1.geometry} material={materials.keys_color} rotation={[-Math.PI / 2, 0, 0]} scale={[8.25, 5.65, 0.272]} />
      <mesh geometry={nodes.Plane_0.geometry} material={materials['Material.008']} position={[-0.151, 0.175, -1.091]} rotation={[-Math.PI / 2, 0, 0]} scale={[7.762, 2.656, 1]} />
    </group>
  )
}

useGLTF.preload('/hp_elitebook_laptop-transformed.glb')
